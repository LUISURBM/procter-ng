{
    "sourceFile": "src/app/component/return/return.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1635767450989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1635767468437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { HttpClient } from '@angular/common/http';\r\n import { Component, OnInit } from '@angular/core';\r\n import { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n-import { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\n+\r\n import { switchMap, take } from 'rxjs/operators';\r\n import { ToastService } from '../toast/toast.service';\r\n import { BundleService } from 'src/app/bundle.service';\r\n import { formatDate } from '@angular/common';\r\n"
                }
            ],
            "date": 1635767450989,
            "name": "Commit-0",
            "content": "import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { ToastService } from '../toast/toast.service';\r\nimport { BundleService } from 'src/app/bundle.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { keymessage } from 'src/app/shared/validation-msg';\r\nimport { ProcterValidator } from '../reject/procter-validator';\r\n\r\n@Component({\r\n\tselector: 'app-return-basic',\r\n\ttemplateUrl: 'return.component.html'\r\n})\r\nexport class DevolucionComponent implements OnInit {\r\n\tplanning: any[] = [];\r\n\tget planillas() { return this.planning && this.planning.length > 0 ? this.planning : []; }\r\n\tmessages: any[];\r\n\tgroup: FormGroup;\r\n\treturned: FormGroup;\r\n\tminDate: Date = new Date();\r\n\tmaxDate: Date = new Date();\r\n\r\n\tconstructor(private http: HttpClient, builder: FormBuilder, public toastService: ToastService, public bundleSrv: BundleService) {\r\n\t\tthis.minDate.setFullYear(new Date().getFullYear() - 1);\r\n\t\tthis.group = builder.group({\r\n\t\t\tloadorderid: new FormControl(null, [Validators.required, Validators.minLength(1), Validators.maxLength(10)]),\r\n\t\t\treg_status: new FormControl(null, [Validators.required, Validators.minLength(1), Validators.maxLength(10)]),\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.returned = builder.group({\r\n\t\t\t// rejecttype: new FormControl(null, [Validators.required, Validators.minLength(1), Validators.maxLength(10)]),\r\n\t\t\tpickupdate: new FormControl(formatDate(this.maxDate, 'yyyy-MM-ddTHH:mm', 'es-Co'), [Validators.required, ProcterValidator.maxDateToday]),\r\n\t\t\tcommentario: new FormControl(null),\r\n\t\t});\r\n\t\thttp.get('http://localhost:8000/api/planning')\r\n\t\t\t.pipe(\r\n\t\t\t\ttake(1)\r\n\t\t\t)\r\n\t\t\t.subscribe({\r\n\t\t\t\tnext: (resp: any[]) => {\r\n\t\t\t\t\tthis.planning = resp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\r\n\r\n\t\tthis.returned.valueChanges.subscribe({\r\n\t\t\tnext: (v) => {\r\n\t\t\t\tconsole.log(this.returned)\r\n\t\t\t\tif (!this.returned.invalid && !this.returned.touched) return;\r\n\t\t\t\tthis.messages = [];\r\n\t\t\t\tObject.keys(this.returned.controls).forEach(k => {\r\n\t\t\t\t\tif (!this.returned.controls[`${k}`].errors) return;\r\n\t\t\t\t\tObject.keys(this.returned.controls[`${k}`].errors).forEach(l => {\r\n\t\t\t\t\t\tif (this.returned.controls[`${k}`].touched && this.returned.controls[`${k}`].errors[`${l}`]) {\r\n\t\t\t\t\t\t\tswitch (`${l}`) {\r\n\t\t\t\t\t\t\t\tcase 'required':\r\n\t\t\t\t\t\t\t\t\tthis.messages.push({ message: `${keymessage[k]} es obligatorio` }); break;\r\n\t\t\t\t\t\t\t\tcase 'procter-validation':\r\n\t\t\t\t\t\t\t\t\tthis.messages.push({ message: `${k} ${l['procter-validation']}` }); break;\r\n\t\t\t\t\t\t\t\tdefault: break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tget controls() {\r\n\t\treturn this.returned.controls;\r\n\t}\r\n\tget plannings() {\r\n\t\treturn this.group.controls.plannings as FormArray;\r\n\t}\r\n\t\r\n\r\n\tsave() {\r\n\t\tif (!this.group.valid) return;\r\n\t\tthis.http.post('http://localhost:8000/api/return/', { ...this.group.value, ...this.returned.value, loadorderid: undefined }).subscribe({\r\n\t\t\tnext: (resp: any) => {\r\n\t\t\t\tif (resp.success)\r\n\t\t\t\t\tthis.toastService.show('Guardado OK!', { classname: 'bg-danger text-light', delay: 15000 });\r\n\t\t\t\tif (!resp.success)\r\n\t\t\t\t\tresp.forEach(e => this.toastService.show(e.error, { classname: 'bg-danger text-light', delay: 15000 }));\r\n\t\t\t},\r\n\t\t\terror: (error: any) => {\r\n\t\t\t\terror.error.forEach(e => this.toastService.show(e.error, { classname: 'bg-danger text-light', delay: 15000 }));\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tdisabled = false;\r\n\r\n\tselectedLoadOrderId() {\r\n\t\tconst selectedorder = this.planillas.filter(p => p.loadorderid == `${this.group.value.loadorderid}`);\r\n\t\treturn selectedorder && selectedorder.length > 0 ? selectedorder[0] : undefined;\r\n\t}\r\n\tselectedLoadOrderIdbydeliveryid() {\r\n\t\tconst selectedorder = this.planillas.filter(p => p.delivery.filter(d => d.deliveryid === this.selecteddeliveryId().deliveryid).length > 0);\r\n\t\treturn selectedorder && selectedorder.length > 0 ? selectedorder[0] : undefined;\r\n\t}\r\n\tselectedLoadOrderIdbyinvoiceid() {\r\n\t\tconst selectedorder = this.planillas.filter(p => p.delivery.filter(d => d.invoice.filter(i => i.invoiceid === this.selectedinvoiceId().invoiceid)).length > 0);\r\n\t\treturn selectedorder && selectedorder.length > 0 ? selectedorder[0] : undefined;\r\n\t}\r\n\tselectedDeliveryIdbyinvoiceid() {\r\n\t\tconst selectedorder = this.planillas.length == 0 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery), []).filter(d => d.invoice.filter(i => i.invoiceid === this.selectedinvoiceId().invoiceid).length > 0);\r\n\t\treturn selectedorder && selectedorder.length > 0 ? selectedorder[0] : undefined;\r\n\t}\r\n\tselectedLoadOrderIdbyproductid() {\r\n\t\tconst selectedorder = this.planillas.length == 0 ? this.planillas : this.planillas.reduce((s, p) => s.concat(\r\n\t\t\tp.delivery.reduce((t, d) => t.concat(\r\n\t\t\t\td.invoice.reduce((u, i) => u.concat(\r\n\t\t\t\t\ti.product.filter(pr => pr.productid === this.selectedproductId().productid)\r\n\t\t\t\t\t\t.map(pr => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tloadid: p.loadid,\r\n\t\t\t\t\t\t\t\tloadorderid: p.loadorderid,\r\n\t\t\t\t\t\t\t\tdeliveryid: d.deliveryid,\r\n\t\t\t\t\t\t\t\tinvoiceid: i.invoiceid,\r\n\t\t\t\t\t\t\t\treferencenumber: pr.productcode\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})), [])), [])), []);\r\n\t\t// this.planillas.filter(pl=>n).reduce((s, p) => s.concat(p.delivery), []).filter(d => d.invoice.reduce((t, q) => t.concat(q.product), []).filter(p => p.productid === this.selectedproductId().productid).length > 0)\r\n\r\n\t\treturn selectedorder && selectedorder.length > 0 ? selectedorder[0] : undefined;\r\n\t}\r\n\tselectedDeliveryIdbyproductid() {\r\n\t\tconst selectedorder = this.planillas.length == 0 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery), []).filter(d => d.invoice.reduce((t, q) => t.concat(q.product), []).filter(p => p.productid === this.selectedproductId().productid).length > 0);\r\n\t\treturn selectedorder && selectedorder.length > 0 ? selectedorder[0] : undefined;\r\n\t}\r\n\tselectedLoadId() {\r\n\t\t// TO-DO: 1-1 loadid-loadorderid ?\r\n\t\tconst selectedLoad = this.planillas.filter(p => p.loadid == `${this.group.value.loadid}`);\r\n\t\treturn selectedLoad && selectedLoad.length > 0 ? selectedLoad[0] : undefined;\r\n\t}\r\n\tselecteddeliveryId() {\r\n\t\t// TO-DO: 1-1 loadid-loadorderid ?\r\n\t\tconst selecteddelivery = this.planillas.length == 0 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery.filter(d => d.deliveryid == `${this.group.value.deliveryid}`)), []);\r\n\t\treturn selecteddelivery && selecteddelivery.length > 0 ? selecteddelivery[0] : undefined;\r\n\t}\r\n\tselectedinvoiceId() {\r\n\t\t// TO-DO: 1-1 loadid-loadorderid ?\r\n\t\tconst selectedinvoice = this.planillas.length == 0 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery.reduce((t, q) => t.concat(q.invoice.filter(d => d.invoiceid == `${this.group.value.invoiceid}`)), [])), []);\r\n\t\treturn selectedinvoice && selectedinvoice.length > 0 ? selectedinvoice[0] : undefined;\r\n\t}\r\n\tselectedproductId() {\r\n\t\t// TO-DO: 1-1 loadid-loadorderid ?\r\n\t\tconst selectedproduct = this.planillas.length == 0 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery.reduce((t, q) => t.concat(q.invoice.reduce((u, r) => u.concat(r.product.filter(pr => pr.productcode == `${this.group.value.referencenumber}`)), [])), [])), []);\r\n\t\treturn selectedproduct && selectedproduct.length > 0 ? selectedproduct[0] : undefined;\r\n\t}\r\n\r\n\tloadorderid() {\r\n\t\tif (!this.selectedLoadOrderId()) {\r\n\t\t\tthis.group.reset();\r\n\t\t} else {\r\n\t\t\tthis.group.patchValue({ loadid: this.selectedLoadOrderId().loadid });\r\n\t\t}\r\n\t}\r\n\tloadid() {\r\n\t\tif (!this.selectedLoadId()) {\r\n\t\t\tthis.group.patchValue({ loadid: undefined });\r\n\t\t} else {\r\n\t\t\tthis.group.patchValue({ loadorderid: this.selectedLoadId().loadorderid });\r\n\t\t}\r\n\t}\r\n\tdeliveryid() {\r\n\t\tif (!this.selecteddeliveryId()) {\r\n\t\t\tthis.group.patchValue({ deliveryid: undefined });\r\n\t\t} else {\r\n\t\t\tthis.group.patchValue({ loadorderid: this.selectedLoadOrderIdbydeliveryid().loadorderid, loadid: this.selectedLoadOrderIdbydeliveryid().loadid });\r\n\t\t}\r\n\t}\r\n\tinvoiceid() {\r\n\t\tif (!this.selectedinvoiceId()) {\r\n\t\t\tthis.group.patchValue({ invoiceid: undefined, referencenumber: undefined });\r\n\t\t} else if (!this.group.value.loadorderid) {\r\n\t\t\tthis.group.patchValue({ loadorderid: this.selectedLoadOrderIdbyinvoiceid().loadorderid, loadid: this.selectedLoadOrderIdbyinvoiceid().loadid, deliveryid: this.selectedDeliveryIdbyinvoiceid().deliveryid });\r\n\t\t} else {\r\n\t\t\tthis.group.patchValue({ referencenumber: undefined });\r\n\t\t}\r\n\t}\r\n\tproductid() {\r\n\t\tif (!this.selectedproductId()) {\r\n\t\t\tthis.group.patchValue({ referencenumber: undefined });\r\n\t\t} else if (!this.group.value.loadorderid) {\r\n\t\t\tthis.group.patchValue({ loadorderid: this.selectedLoadOrderIdbyproductid().loadorderid, loadid: this.selectedLoadOrderIdbyproductid().loadid, deliveryid: this.selectedLoadOrderIdbyproductid().deliveryid, invoiceid: this.selectedLoadOrderIdbyproductid().invoiceid });\r\n\t\t}\r\n\t}\r\n\r\n\tplanningdatabyloadid() {\r\n\t\treturn this.selectedLoadOrderId() ? [this.selectedLoadOrderId().loadid] : this.planillas.map(p => p.loadid);\r\n\t}\r\n\tdeliverdatabyloadid() {\r\n\t\treturn this.selectedLoadOrderId() ? this.selectedLoadOrderId().delivery : this.planillas.length < 1 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery), []);\r\n\t}\r\n\t//TO-DO: validar unique invoice in delivery\r\n\tinvoicedatabydeliveryid() {\r\n\t\treturn this.selecteddeliveryId() ? this.selecteddeliveryId().invoice : this.planillas.length < 1 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery.reduce((t, q) => t.concat(q.invoice), [])), []);\r\n\t}\r\n\trefnumberdatabyinvoiceid() {\r\n\t\treturn this.selectedinvoiceId() ? this.selectedinvoiceId().product : this.planillas.length < 1 ? this.planillas : this.planillas.reduce((s, p) => s.concat(p.delivery.reduce((t, q) => t.concat(q.invoice.reduce((u, r) => u.concat(r.product), [])), [])), []);\r\n\t}\r\n\r\n\tclear(control) {\r\n\t\tthis.returned.reset();\r\n\t\tthis.group.controls[control].reset();\r\n\t\tswitch (control) {\r\n\t\t\tcase 'invoiceid':\r\n\t\t\t\tthis.group.controls['referencenumber'].reset();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'deliveryid':\r\n\t\t\t\tthis.group.controls['invoiceid'].reset();\r\n\t\t\t\tthis.group.controls['referencenumber'].reset();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'loadid':\r\n\t\t\t\tthis.group.controls['referencenumber'].reset();\r\n\t\t\t\tthis.group.controls['invoiceid'].reset();\r\n\t\t\t\tthis.group.controls['deliveryid'].reset();\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpickupdate() {\r\n\t\tif (this.group.value.pickupdate && new Date(this.group.value.pickupdate) > new Date())\r\n\t\t\tthis.group.patchValue({ pickupdate: undefined });\r\n\r\n\t}\r\n}\r\n"
        }
    ]
}