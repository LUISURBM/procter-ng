{
    "sourceFile": "src/app/component/reject/procter-validator.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1635858928602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1635859000447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \r\n         return null;\r\n     }\r\n     static cedula(control: FormControl): { [key: string]: any } {\r\n-        let cedulaPattern = /^(\\d{5}-\\d{11})?$/g;\r\n+        let cedulaPattern = /^(\\d{5,11})?$/g;\r\n         if (control.value != null && control.value && (typeof control.value === 'string') && !control.value.match(cedulaPattern))\r\n             return { \"procter-validation\": 'Cédula tener de 5 a 10 números, sin letras, comas ni puntos' };\r\n \r\n         return null;\r\n"
                }
            ],
            "date": 1635858928602,
            "name": "Commit-0",
            "content": "import { FormControl } from '@angular/forms';\r\n\r\nexport class ProcterValidator {\r\n    static maxDateToday(control: FormControl): { [key: string]: any } {\r\n\r\n        if (new Date(control.value) > new Date())\r\n            return { \"procter-validation\": \"debe ser inferior a la fecha actual\" };\r\n\r\n        return null;\r\n    }\r\n    static ptDate(control: FormControl): { [key: string]: any } {\r\n        let ptDatePattern = /^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g;\r\n        if (!control.value.match(ptDatePattern))\r\n            return { \"ptDate\": true };\r\n\r\n        return null;\r\n    }\r\n    static placa(control: FormControl): { [key: string]: any } {\r\n        let placaPattern = /^([a-zA-Z]{3}[0-9]{3}|[a-zA-Z]{3}[0-9]{2}[a-zA-Z])$/g;\r\n        if (control.value != null && control.value && (typeof control.value === 'string') && !control.value.match(placaPattern))\r\n            return { \"procter-validation\": 'Placa debe ser 6 carácteres de largo, tener 3 letras al inicio y 3 números al final' };\r\n\r\n        return null;\r\n    }\r\n    static cedula(control: FormControl): { [key: string]: any } {\r\n        let cedulaPattern = /^(\\d{5}-\\d{11})?$/g;\r\n        if (control.value != null && control.value && (typeof control.value === 'string') && !control.value.match(cedulaPattern))\r\n            return { \"procter-validation\": 'Cédula tener de 5 a 10 números, sin letras, comas ni puntos' };\r\n\r\n        return null;\r\n    }\r\n\r\n    static usDate(control: FormControl): { [key: string]: any } {\r\n        let usDatePattern = /^02\\/(?:[01]\\d|2\\d)\\/(?:19|20)(?:0[048]|[13579][26]|[2468][048])|(?:0[13578]|10|12)\\/(?:[0-2]\\d|3[01])\\/(?:19|20)\\d{2}|(?:0[469]|11)\\/(?:[0-2]\\d|30)\\/(?:19|20)\\d{2}|02\\/(?:[0-1]\\d|2[0-8])\\/(?:19|20)\\d{2}$/;\r\n\r\n        if (control.value != null && control.value && (typeof control.value === 'string') && !control.value.match(usDatePattern))\r\n            return { \"usDate\": true };\r\n\r\n        return null;\r\n    }\r\n}"
        }
    ]
}