{
    "sourceFile": "src/app/component/reject/pivot/webdatarocks.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1635818623827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1635818623827,
            "name": "Commit-0",
            "content": "export as namespace WebDataRocks;\r\n\r\ndeclare const WebDataRocks: WebDataRocksConstructor;\r\nexport = WebDataRocks;\r\n\r\ninterface WebDataRocksConstructor {\r\n    new(params: WebDataRocks.Params): WebDataRocks.Pivot;\r\n    (params: WebDataRocks.Params): WebDataRocks.Pivot;\r\n}\r\n\r\ninterface JQuery {\r\n    WebDataRocks(params: WebDataRocks.Params): WebDataRocks.Pivot;\r\n}\r\n\r\ndeclare namespace WebDataRocks {\r\n    interface Params {\r\n        // params\r\n        toolbar?: boolean;\r\n        width?: string | number;\r\n        height?: string | number;\r\n        report?: Report | string;\r\n        global?: Report;\r\n        customizeCell?: (cell: WebDataRocks.CellBuilder, data: WebDataRocks.Cell) => void;\r\n        // events\r\n        cellclick?: Function;\r\n        celldoubleclick?: Function;\r\n        dataerror?: Function;\r\n        datafilecancelled?: Function;\r\n        dataloaded?: Function;\r\n        datachanged?: Function;\r\n        fieldslistclose?: Function;\r\n        fieldslistopen?: Function;\r\n        filteropen?: Function;\r\n        fullscreen?: Function;\r\n        loadingdata?: Function;\r\n        loadinglocalization?: Function;\r\n        loadingreportfile?: Function;\r\n        localizationerror?: Function;\r\n        localizationloaded?: Function;\r\n        openingreportfile?: Function;\r\n        querycomplete?: Function;\r\n        queryerror?: Function;\r\n        ready?: Function;\r\n        reportchange?: Function;\r\n        reportcomplete?: Function;\r\n        reportfilecancelled?: Function;\r\n        reportfileerror?: Function;\r\n        reportfileloaded?: Function;\r\n        runningquery?: Function;\r\n        update?: Function;\r\n        beforetoolbarcreated?: Function;\r\n        aftergriddraw?: Function;\r\n        beforegriddraw?: Function;\r\n        // other\r\n        container?: Element | string;\r\n    }\r\n\r\n    interface Pivot {\r\n        addCalculatedMeasure(measure: Measure): void;\r\n        addCondition(condition: ConditionalFormat): void;\r\n        addJSON(json: Object[]): void;\r\n        clear(): void;\r\n        clearFilter(hierarchyName: string): void;\r\n        closeFieldsList(): void;\r\n        collapseAllData(): void;\r\n        collapseData(hierarchyName: string): void;\r\n        connectTo(object: DataSourceParams, callbackHandler: Function | string): void;\r\n        dispose(): void;\r\n        expandAllData(withAllChildren?: boolean): void;\r\n        expandData(hierarchyName: string): void;\r\n        exportTo(type: string, exportOptions?: ExportOptions, callbackHandler?: Function | string): void;\r\n        getAllConditions(): ConditionalFormat[];\r\n        getAllMeasures(): Measure[];\r\n        getAllHierarchies(): Hierarchy[];\r\n        getCell(rowIdx: number, colIdx: number): Cell;\r\n        getColumns(): Hierarchy[];\r\n        getCondition(id: string): ConditionalFormat;\r\n        getData(options: { slice?: Slice }, callbackHandler: Function | string, updateHandler?: Function | string): void;\r\n        getFilter(hierarchyName: string): FilterItem[];\r\n        getFilterProperties(hierarchyName: string): FilterProperties;\r\n        getFormat(measureName: string): Format;\r\n        getMeasures(): Measure[];\r\n        getMembers(hierarchyName: string, memberName: string, callbackHandler: Function | string): Member[];\r\n        getOptions(): Options;\r\n        getReportFilters(): Hierarchy[];\r\n        getReport(format?: string): Report | string;\r\n        getRows(): Hierarchy[];\r\n        getSelectedCell(): Cell;\r\n        getSort(hierarchyName: string): string;\r\n        load(url: string): void;\r\n        on(eventType: string, handler: Function | string): void;\r\n        off(eventType: string, handler?: Function | string): void;\r\n        open(): void;\r\n        openFieldsList(): void;\r\n        print(options?: PrintOptions): void;\r\n        refresh(): void;\r\n        removeAllCalculatedMeasures(): void;\r\n        removeAllConditions(): void;\r\n        removeCondition(id: string): void;\r\n        removeCalculatedMeasure(uniqueName: string): void;\r\n        removeSelection(): void;\r\n        runQuery(slice: Slice): void;\r\n        save(filename: string, destination: string, callbackHandler?: Function | string, url?: string, embedData?: boolean): string;\r\n        setBottomX(hierarchyName: string, num: number, measureName: string): void;\r\n        setFilter(hierarchyName: string, items: string[], negation?: boolean): void;\r\n        setFormat(format: Format, measureName: string): void;\r\n        setOptions(options: Options): void;\r\n        setReport(report: Report): void;\r\n        setSort(hierarchyName: string, sortName: string, customSorting?: string[]): void;\r\n        setTopX(hierarchyName: string, num: number, measureName: string): void;\r\n        sortValues(axisName: string, type: string, tuple: number[], measureName: string): void;\r\n        updateData(object: DataSourceParams | Object[]): void;\r\n        version: number;\r\n        customizeCell(customizeCellFunction: (cell: CellBuilder, data: Cell) => void): void\r\n    }\r\n\r\n    interface Report {\r\n        dataSource?: DataSourceParams;\r\n        slice?: Slice;\r\n        options?: Options;\r\n        conditions?: ConditionalFormat[];\r\n        formats?: Format[];\r\n        tableSizes?: {\r\n            columns?: ColumnSize[],\r\n            rows?: RowSize[]\r\n        }\r\n        localization?: Object | string;\r\n    }\r\n\r\n    interface DataSourceParams {\r\n        browseForFile?: boolean;\r\n        data?: Object[];\r\n        dataSourceType?: string;\r\n        fieldSeparator?: string;\r\n        filename?: string;\r\n        ignoreQuotedLineBreaks?: boolean;\r\n        recordsetDelimiter?: string;\r\n        customData?: string;\r\n        hash?: string;\r\n        username?: string;\r\n        password?: string;\r\n    }\r\n\r\n    interface Slice {\r\n        columns?: Hierarchy[];\r\n        measures?: Measure[];\r\n        reportFilters?: Hierarchy[];\r\n        rows?: Hierarchy[];\r\n        drills?: {\r\n            drillAll?: boolean,\r\n            columns?: Object[],\r\n            rows?: Object[],\r\n        };\r\n        expands?: {\r\n            expandAll?: boolean,\r\n            columns?: Object[],\r\n            rows?: Object[]\r\n        };\r\n        sorting?: {\r\n            column?: Object,\r\n            row?: Object\r\n        };\r\n    }\r\n\r\n    interface Options {\r\n        grid?: {\r\n            showFilter?: boolean,\r\n            showGrandTotals?: string,\r\n            showHeaders?: boolean,\r\n            showHierarchies?: boolean,\r\n            showHierarchyCaptions?: boolean,\r\n            showReportFiltersArea?: boolean,\r\n            showTotals?: boolean,\r\n            title?: string,\r\n            type?: string\r\n        };\r\n        configuratorActive?: boolean;\r\n        configuratorButton?: boolean;\r\n        datePattern?: string;\r\n        dateTimePattern?: string;\r\n        defaultHierarchySortName?: string;\r\n        drillThrough?: boolean;\r\n        editing?: boolean;\r\n        selectEmptyCells?: boolean;\r\n        showAggregations?: boolean;\r\n        showCalculatedValuesButton?: boolean;\r\n        showDefaultSlice?: boolean;\r\n        sorting?: string;\r\n        showAggregationLabels?: boolean;\r\n    }\r\n\r\n    interface PrintOptions {\r\n        header?: string;\r\n        footer?: string;\r\n    }\r\n\r\n    interface Member {\r\n        caption?: string;\r\n        uniqueName?: string;\r\n        hierarchyName?: string;\r\n        children?: Member[];\r\n        isLeaf?: boolean;\r\n        parentMember?: string;\r\n    }\r\n\r\n    interface FilterProperties {\r\n        type?: string;\r\n        members?: FilterItem[];\r\n        quantity?: number;\r\n        measure?: string;\r\n    }\r\n\r\n    interface FilterItem {\r\n        caption?: string;\r\n        uniqueName?: string;\r\n        hierarchyName?: string;\r\n    }\r\n\r\n    interface Cell {\r\n        columnIndex?: number;\r\n        columns?: any[];\r\n        height?: number;\r\n        hierarchy?: Hierarchy;\r\n        isClassicTotalRow?: boolean;\r\n        isDrillThrough?: boolean;\r\n        isGrandTotal?: boolean;\r\n        isGrandTotalColumn?: boolean;\r\n        isGrandTotalRow?: boolean;\r\n        isTotal?: boolean;\r\n        isTotalColumn?: boolean;\r\n        isTotalRow?: boolean;\r\n        member?: Member;\r\n        width?: number;\r\n        x?: number;\r\n        y?: number;\r\n        label?: string;\r\n        measure?: string;\r\n        rowIndex?: number;\r\n        rows?: any[];\r\n        type?: string;\r\n        value?: number;\r\n    }\r\n\r\n    interface ExportOptions {\r\n        filename?: string;\r\n        destinationType?: string;\r\n        excelSheetName?: string;\r\n        footer?: string;\r\n        header?: string;\r\n        pageOrientation?: string;\r\n        showFilters?: boolean;\r\n        url?: string;\r\n    }\r\n\r\n    interface Hierarchy {\r\n        caption?: string;\r\n        dimensionName?: string;\r\n        filter?: {\r\n            members?: string[],\r\n            negation?: boolean,\r\n            measure?: string,\r\n            quantity?: number,\r\n            type?: string\r\n        };\r\n        sortName?: string;\r\n        uniqueName?: string;\r\n    }\r\n\r\n    interface Measure {\r\n        uniqueName?: string;\r\n        active?: boolean;\r\n        aggregation?: string;\r\n        availableAggregations?: string[];\r\n        caption?: string;\r\n        formula?: string;\r\n        format?: string;\r\n        grandTotalCaption?: string;\r\n    }\r\n\r\n    interface ConditionalFormat {\r\n        formula?: string;\r\n        format?: Style;\r\n        formatCSS?: string;\r\n        row?: number;\r\n        column?: number;\r\n        measure?: string;\r\n        hierarchy?: string;\r\n        member?: string;\r\n        isTotal?: number;\r\n    }\r\n\r\n    interface Style {\r\n        color?: string;\r\n        backgroundColor?: string;\r\n        backgroundImage?: string;\r\n        borderColor?: string;\r\n        fontSize?: string;\r\n        fontWeight?: string;\r\n        fill?: string;\r\n        textAlign?: string;\r\n        fontFamily?: string;\r\n        width?: number;\r\n        maxWidth?: number;\r\n        height?: number;\r\n        maxHeight?: number;\r\n    }\r\n\r\n    interface Format {\r\n        name?: string;\r\n        thousandsSeparator?: string;\r\n        decimalSeparator?: string;\r\n        decimalPlaces?: number;\r\n        maxDecimalPlaces?: number;\r\n        maxSymbols?: number;\r\n        currencySymbol?: string;\r\n        currencySymbolAlign?: string;\r\n        nullValue?: string;\r\n        infinityValue?: string;\r\n        divideByZeroValue?: string;\r\n        textAlign?: string;\r\n    }\r\n\r\n    interface ColumnSize {\r\n        width?: number;\r\n        idx?: number;\r\n        tuple?: string[];\r\n        measure?: string;\r\n    }\r\n\r\n    interface RowSize {\r\n        height?: number;\r\n        idx?: number;\r\n        tuple?: string[];\r\n        measure?: string;\r\n    }\r\n\r\n    interface CellBuilder {\r\n        attr?: Object;\r\n        classes?: string[];\r\n        style?: Object;\r\n        tag?: string;\r\n        text?: string;\r\n        addClass(value?: string): void;\r\n        toHtml(): string;\r\n    }\r\n\r\n}"
        }
    ]
}