{
    "sourceFile": "src/app/component/reject/pivot/webdatarocks.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1635819200927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1635821606814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n-\r\n+import $pivot = require('./webdatarocks');\r\n @Component({\r\n     selector: \"wbr-pivot\",\r\n     template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n })\r\n"
                },
                {
                    "date": 1635821778655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n-import $pivot = require('./webdatarocks');\r\n+import * as t from \"./webdatarocks.js\";\r\n @Component({\r\n     selector: \"wbr-pivot\",\r\n     template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n })\r\n"
                },
                {
                    "date": 1635822559533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n-import * as t from \"./webdatarocks.js\";\r\n+declare const require: any;\r\n+const r = require(\"./webdatarocks.js\");\r\n @Component({\r\n     selector: \"wbr-pivot\",\r\n     template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n })\r\n"
                },
                {
                    "date": 1635822771565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n-declare const require: any;\r\n-const r = require(\"./webdatarocks.js\");\r\n+\r\n @Component({\r\n     selector: \"wbr-pivot\",\r\n     template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n })\r\n"
                },
                {
                    "date": 1635824342594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n         this.root = <HTMLElement>el.nativeElement;\r\n     }\r\n \r\n     ngOnInit() {\r\n-        this.webDataRocks = window[\"webdatarocks\"]({\r\n+        this.webDataRocks = window[\"WebDataRocks\"]({\r\n             container: this.root.getElementsByClassName(\"wbr-ng-wrapper\")[0],\r\n             width: this.width,\r\n             height: this.height,\r\n             toolbar: this.toolbar,\r\n"
                },
                {
                    "date": 1635825675072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,94 +1,94 @@\n-import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n+// import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n \r\n-@Component({\r\n-    selector: \"wbr-pivot\",\r\n-    template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n-})\r\n-export class WebDataRocksPivot {\r\n-    // params\r\n-    @Input() toolbar: boolean;\r\n-    @Input() width: string | number;\r\n-    @Input() height: string | number;\r\n-    @Input() report: any | string;\r\n-    @Input() global: any;\r\n-    @Input() customizeCell: (cell: any, data: any) => void;\r\n-    // events\r\n-    @Output() cellclick: EventEmitter<any> = new EventEmitter();\r\n-    @Output() celldoubleclick: EventEmitter<any> = new EventEmitter();\r\n-    @Output() dataerror: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() datafilecancelled: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() dataloaded: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() datachanged: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() fieldslistclose: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() fieldslistopen: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() filteropen: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() fullscreen: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() loadingdata: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() loadinglocalization: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() loadingreportfile: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() localizationerror: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() localizationloaded: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() openingreportfile: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() querycomplete: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() queryerror: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() ready: EventEmitter<any> = new EventEmitter();\r\n-    @Output() reportchange: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() reportcomplete: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() reportfilecancelled: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() reportfileerror: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() reportfileloaded: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() runningquery: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() update: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() beforetoolbarcreated: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() aftergriddraw: EventEmitter<Object> = new EventEmitter();\r\n-    @Output() beforegriddraw: EventEmitter<Object> = new EventEmitter();\r\n-    // api\r\n-    public webDataRocks: any;\r\n-    // private\r\n-    private root: HTMLElement;\r\n+// @Component({\r\n+//     selector: \"wbr-pivot\",\r\n+//     template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n+// })\r\n+// export class WebDataRocksPivot {\r\n+//     // params\r\n+//     @Input() toolbar: boolean;\r\n+//     @Input() width: string | number;\r\n+//     @Input() height: string | number;\r\n+//     @Input() report: any | string;\r\n+//     @Input() global: any;\r\n+//     @Input() customizeCell: (cell: any, data: any) => void;\r\n+//     // events\r\n+//     @Output() cellclick: EventEmitter<any> = new EventEmitter();\r\n+//     @Output() celldoubleclick: EventEmitter<any> = new EventEmitter();\r\n+//     @Output() dataerror: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() datafilecancelled: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() dataloaded: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() datachanged: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() fieldslistclose: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() fieldslistopen: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() filteropen: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() fullscreen: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() loadingdata: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() loadinglocalization: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() loadingreportfile: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() localizationerror: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() localizationloaded: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() openingreportfile: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() querycomplete: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() queryerror: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() ready: EventEmitter<any> = new EventEmitter();\r\n+//     @Output() reportchange: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() reportcomplete: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() reportfilecancelled: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() reportfileerror: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() reportfileloaded: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() runningquery: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() update: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() beforetoolbarcreated: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() aftergriddraw: EventEmitter<Object> = new EventEmitter();\r\n+//     @Output() beforegriddraw: EventEmitter<Object> = new EventEmitter();\r\n+//     // api\r\n+//     public webDataRocks: any;\r\n+//     // private\r\n\\ No newline at end of file\n+//     private root: HTMLElement;\r\n \r\n-    constructor(el: ElementRef) {\r\n-        this.root = <HTMLElement>el.nativeElement;\r\n-    }\r\n+//     constructor(el: ElementRef) {\r\n+//         this.root = <HTMLElement>el.nativeElement;\r\n+//     }\r\n \r\n-    ngOnInit() {\r\n-        this.webDataRocks = window[\"WebDataRocks\"]({\r\n-            container: this.root.getElementsByClassName(\"wbr-ng-wrapper\")[0],\r\n-            width: this.width,\r\n-            height: this.height,\r\n-            toolbar: this.toolbar,\r\n-            report: this.report,\r\n-            global: this.global,\r\n-            customizeCell: this.customizeCell,\r\n-            cellclick: (cell: any) => this.cellclick.next(cell),\r\n-            celldoubleclick: (cell: any) => this.celldoubleclick.next(cell),\r\n-            dataerror: (event: Object) => this.dataerror.next(event),\r\n-            datafilecancelled: (event: Object) => this.datafilecancelled.next(event),\r\n-            dataloaded: (event: Object) => this.dataloaded.next(event),\r\n-            datachanged: (event: Object) => this.datachanged.next(event),\r\n-            fieldslistclose: (event: Object) => this.fieldslistclose.next(event),\r\n-            fieldslistopen: (event: Object) => this.fieldslistopen.next(event),\r\n-            filteropen: (event: Object) => this.filteropen.next(event),\r\n-            fullscreen: (event: Object) => this.fullscreen.next(event),\r\n-            loadingdata: (event: Object) => this.loadingdata.next(event),\r\n-            loadinglocalization: (event: Object) => this.loadinglocalization.next(event),\r\n-            loadingreportfile: (event: Object) => this.loadingreportfile.next(event),\r\n-            localizationerror: (event: Object) => this.localizationerror.next(event),\r\n-            localizationloaded: (event: Object) => this.localizationloaded.next(event),\r\n-            openingreportfile: (event: Object) => this.openingreportfile.next(event),\r\n-            querycomplete: (event: Object) => this.querycomplete.next(event),\r\n-            queryerror: (event: Object) => this.queryerror.next(event),\r\n-            ready: () => this.ready.next(this.webDataRocks),\r\n-            reportchange: (event: Object) => this.reportchange.next(event),\r\n-            reportcomplete: (event: Object) => this.reportcomplete.next(event),\r\n-            reportfilecancelled: (event: Object) => this.reportfilecancelled.next(event),\r\n-            reportfileerror: (event: Object) => this.reportfileerror.next(event),\r\n-            reportfileloaded: (event: Object) => this.reportfileloaded.next(event),\r\n-            runningquery: (event: Object) => this.runningquery.next(event),\r\n-            update: (event: Object) => this.update.next(event),\r\n-            beforetoolbarcreated: (toolbar: Object) => this.beforetoolbarcreated.next(toolbar),\r\n-            aftergriddraw: (event: Object) => this.aftergriddraw.next(event),\r\n-            beforegriddraw: (event: Object) => this.beforegriddraw.next(event)\r\n-        });\r\n-    }\r\n-}\n+//     ngOnInit() {\r\n+//         this.webDataRocks = window[\"WebDataRocks\"]({\r\n+//             container: this.root.getElementsByClassName(\"wbr-ng-wrapper\")[0],\r\n+//             width: this.width,\r\n+//             height: this.height,\r\n+//             toolbar: this.toolbar,\r\n+//             report: this.report,\r\n+//             global: this.global,\r\n+//             customizeCell: this.customizeCell,\r\n+//             cellclick: (cell: any) => this.cellclick.next(cell),\r\n+//             celldoubleclick: (cell: any) => this.celldoubleclick.next(cell),\r\n+//             dataerror: (event: Object) => this.dataerror.next(event),\r\n+//             datafilecancelled: (event: Object) => this.datafilecancelled.next(event),\r\n+//             dataloaded: (event: Object) => this.dataloaded.next(event),\r\n+//             datachanged: (event: Object) => this.datachanged.next(event),\r\n+//             fieldslistclose: (event: Object) => this.fieldslistclose.next(event),\r\n+//             fieldslistopen: (event: Object) => this.fieldslistopen.next(event),\r\n+//             filteropen: (event: Object) => this.filteropen.next(event),\r\n+//             fullscreen: (event: Object) => this.fullscreen.next(event),\r\n+//             loadingdata: (event: Object) => this.loadingdata.next(event),\r\n+//             loadinglocalization: (event: Object) => this.loadinglocalization.next(event),\r\n+//             loadingreportfile: (event: Object) => this.loadingreportfile.next(event),\r\n+//             localizationerror: (event: Object) => this.localizationerror.next(event),\r\n+//             localizationloaded: (event: Object) => this.localizationloaded.next(event),\r\n+//             openingreportfile: (event: Object) => this.openingreportfile.next(event),\r\n+//             querycomplete: (event: Object) => this.querycomplete.next(event),\r\n+//             queryerror: (event: Object) => this.queryerror.next(event),\r\n+//             ready: () => this.ready.next(this.webDataRocks),\r\n+//             reportchange: (event: Object) => this.reportchange.next(event),\r\n+//             reportcomplete: (event: Object) => this.reportcomplete.next(event),\r\n+//             reportfilecancelled: (event: Object) => this.reportfilecancelled.next(event),\r\n+//             reportfileerror: (event: Object) => this.reportfileerror.next(event),\r\n+//             reportfileloaded: (event: Object) => this.reportfileloaded.next(event),\r\n+//             runningquery: (event: Object) => this.runningquery.next(event),\r\n+//             update: (event: Object) => this.update.next(event),\r\n+//             beforetoolbarcreated: (toolbar: Object) => this.beforetoolbarcreated.next(toolbar),\r\n+//             aftergriddraw: (event: Object) => this.aftergriddraw.next(event),\r\n+//             beforegriddraw: (event: Object) => this.beforegriddraw.next(event)\r\n+//         });\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1635825771297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,94 +1,94 @@\n-// import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n+import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n \r\n-// @Component({\r\n-//     selector: \"wbr-pivot\",\r\n-//     template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n-// })\r\n-// export class WebDataRocksPivot {\r\n-//     // params\r\n-//     @Input() toolbar: boolean;\r\n-//     @Input() width: string | number;\r\n-//     @Input() height: string | number;\r\n-//     @Input() report: any | string;\r\n-//     @Input() global: any;\r\n-//     @Input() customizeCell: (cell: any, data: any) => void;\r\n-//     // events\r\n-//     @Output() cellclick: EventEmitter<any> = new EventEmitter();\r\n-//     @Output() celldoubleclick: EventEmitter<any> = new EventEmitter();\r\n-//     @Output() dataerror: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() datafilecancelled: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() dataloaded: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() datachanged: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() fieldslistclose: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() fieldslistopen: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() filteropen: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() fullscreen: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() loadingdata: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() loadinglocalization: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() loadingreportfile: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() localizationerror: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() localizationloaded: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() openingreportfile: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() querycomplete: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() queryerror: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() ready: EventEmitter<any> = new EventEmitter();\r\n-//     @Output() reportchange: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() reportcomplete: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() reportfilecancelled: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() reportfileerror: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() reportfileloaded: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() runningquery: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() update: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() beforetoolbarcreated: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() aftergriddraw: EventEmitter<Object> = new EventEmitter();\r\n-//     @Output() beforegriddraw: EventEmitter<Object> = new EventEmitter();\r\n-//     // api\r\n-//     public webDataRocks: any;\r\n-//     // private\r\n-//     private root: HTMLElement;\r\n+@Component({\r\n+    selector: \"wbr-pivot\",\r\n+    template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n+})\r\n+export class WebDataRocksPivot {\r\n+    // params\r\n+    @Input() toolbar: boolean;\r\n+    @Input() width: string | number;\r\n+    @Input() height: string | number;\r\n+    @Input() report: any | string;\r\n+    @Input() global: any;\r\n+    @Input() customizeCell: (cell: any, data: any) => void;\r\n+    // events\r\n+    @Output() cellclick: EventEmitter<any> = new EventEmitter();\r\n+    @Output() celldoubleclick: EventEmitter<any> = new EventEmitter();\r\n+    @Output() dataerror: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() datafilecancelled: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() dataloaded: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() datachanged: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() fieldslistclose: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() fieldslistopen: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() filteropen: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() fullscreen: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() loadingdata: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() loadinglocalization: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() loadingreportfile: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() localizationerror: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() localizationloaded: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() openingreportfile: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() querycomplete: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() queryerror: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() ready: EventEmitter<any> = new EventEmitter();\r\n+    @Output() reportchange: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() reportcomplete: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() reportfilecancelled: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() reportfileerror: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() reportfileloaded: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() runningquery: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() update: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() beforetoolbarcreated: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() aftergriddraw: EventEmitter<Object> = new EventEmitter();\r\n+    @Output() beforegriddraw: EventEmitter<Object> = new EventEmitter();\r\n+    // api\r\n+    public webDataRocks: any;\r\n+    // private\r\n\\ No newline at end of file\n+    private root: HTMLElement;\r\n \r\n-//     constructor(el: ElementRef) {\r\n-//         this.root = <HTMLElement>el.nativeElement;\r\n-//     }\r\n+    constructor(el: ElementRef) {\r\n+        this.root = <HTMLElement>el.nativeElement;\r\n+    }\r\n \r\n-//     ngOnInit() {\r\n-//         this.webDataRocks = window[\"WebDataRocks\"]({\r\n-//             container: this.root.getElementsByClassName(\"wbr-ng-wrapper\")[0],\r\n-//             width: this.width,\r\n-//             height: this.height,\r\n-//             toolbar: this.toolbar,\r\n-//             report: this.report,\r\n-//             global: this.global,\r\n-//             customizeCell: this.customizeCell,\r\n-//             cellclick: (cell: any) => this.cellclick.next(cell),\r\n-//             celldoubleclick: (cell: any) => this.celldoubleclick.next(cell),\r\n-//             dataerror: (event: Object) => this.dataerror.next(event),\r\n-//             datafilecancelled: (event: Object) => this.datafilecancelled.next(event),\r\n-//             dataloaded: (event: Object) => this.dataloaded.next(event),\r\n-//             datachanged: (event: Object) => this.datachanged.next(event),\r\n-//             fieldslistclose: (event: Object) => this.fieldslistclose.next(event),\r\n-//             fieldslistopen: (event: Object) => this.fieldslistopen.next(event),\r\n-//             filteropen: (event: Object) => this.filteropen.next(event),\r\n-//             fullscreen: (event: Object) => this.fullscreen.next(event),\r\n-//             loadingdata: (event: Object) => this.loadingdata.next(event),\r\n-//             loadinglocalization: (event: Object) => this.loadinglocalization.next(event),\r\n-//             loadingreportfile: (event: Object) => this.loadingreportfile.next(event),\r\n-//             localizationerror: (event: Object) => this.localizationerror.next(event),\r\n-//             localizationloaded: (event: Object) => this.localizationloaded.next(event),\r\n-//             openingreportfile: (event: Object) => this.openingreportfile.next(event),\r\n-//             querycomplete: (event: Object) => this.querycomplete.next(event),\r\n-//             queryerror: (event: Object) => this.queryerror.next(event),\r\n-//             ready: () => this.ready.next(this.webDataRocks),\r\n-//             reportchange: (event: Object) => this.reportchange.next(event),\r\n-//             reportcomplete: (event: Object) => this.reportcomplete.next(event),\r\n-//             reportfilecancelled: (event: Object) => this.reportfilecancelled.next(event),\r\n-//             reportfileerror: (event: Object) => this.reportfileerror.next(event),\r\n-//             reportfileloaded: (event: Object) => this.reportfileloaded.next(event),\r\n-//             runningquery: (event: Object) => this.runningquery.next(event),\r\n-//             update: (event: Object) => this.update.next(event),\r\n-//             beforetoolbarcreated: (toolbar: Object) => this.beforetoolbarcreated.next(toolbar),\r\n-//             aftergriddraw: (event: Object) => this.aftergriddraw.next(event),\r\n-//             beforegriddraw: (event: Object) => this.beforegriddraw.next(event)\r\n-//         });\r\n-//     }\r\n-// }\n+    ngOnInit() {\r\n+        this.webDataRocks = window[\"WebDataRocks\"]({\r\n+            container: this.root.getElementsByClassName(\"wbr-ng-wrapper\")[0],\r\n+            width: this.width,\r\n+            height: this.height,\r\n+            toolbar: this.toolbar,\r\n+            report: this.report,\r\n+            global: this.global,\r\n+            customizeCell: this.customizeCell,\r\n+            cellclick: (cell: any) => this.cellclick.next(cell),\r\n+            celldoubleclick: (cell: any) => this.celldoubleclick.next(cell),\r\n+            dataerror: (event: Object) => this.dataerror.next(event),\r\n+            datafilecancelled: (event: Object) => this.datafilecancelled.next(event),\r\n+            dataloaded: (event: Object) => this.dataloaded.next(event),\r\n+            datachanged: (event: Object) => this.datachanged.next(event),\r\n+            fieldslistclose: (event: Object) => this.fieldslistclose.next(event),\r\n+            fieldslistopen: (event: Object) => this.fieldslistopen.next(event),\r\n+            filteropen: (event: Object) => this.filteropen.next(event),\r\n+            fullscreen: (event: Object) => this.fullscreen.next(event),\r\n+            loadingdata: (event: Object) => this.loadingdata.next(event),\r\n+            loadinglocalization: (event: Object) => this.loadinglocalization.next(event),\r\n+            loadingreportfile: (event: Object) => this.loadingreportfile.next(event),\r\n+            localizationerror: (event: Object) => this.localizationerror.next(event),\r\n+            localizationloaded: (event: Object) => this.localizationloaded.next(event),\r\n+            openingreportfile: (event: Object) => this.openingreportfile.next(event),\r\n+            querycomplete: (event: Object) => this.querycomplete.next(event),\r\n+            queryerror: (event: Object) => this.queryerror.next(event),\r\n+            ready: () => this.ready.next(this.webDataRocks),\r\n+            reportchange: (event: Object) => this.reportchange.next(event),\r\n+            reportcomplete: (event: Object) => this.reportcomplete.next(event),\r\n+            reportfilecancelled: (event: Object) => this.reportfilecancelled.next(event),\r\n+            reportfileerror: (event: Object) => this.reportfileerror.next(event),\r\n+            reportfileloaded: (event: Object) => this.reportfileloaded.next(event),\r\n+            runningquery: (event: Object) => this.runningquery.next(event),\r\n+            update: (event: Object) => this.update.next(event),\r\n+            beforetoolbarcreated: (toolbar: Object) => this.beforetoolbarcreated.next(toolbar),\r\n+            aftergriddraw: (event: Object) => this.aftergriddraw.next(event),\r\n+            beforegriddraw: (event: Object) => this.beforegriddraw.next(event)\r\n+        });\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1635826822034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     constructor(el: ElementRef) {\r\n         this.root = <HTMLElement>el.nativeElement;\r\n     }\r\n \r\n-    ngOnInit() {\r\n+    ngAfterViewInit() {\r\n         this.webDataRocks = window[\"WebDataRocks\"]({\r\n             container: this.root.getElementsByClassName(\"wbr-ng-wrapper\")[0],\r\n             width: this.width,\r\n             height: this.height,\r\n"
                }
            ],
            "date": 1635819200927,
            "name": "Commit-0",
            "content": "import { Component, ElementRef, Input, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"wbr-pivot\",\r\n    template: \"<div><div class='wbr-ng-wrapper'></div></div>\"\r\n})\r\nexport class WebDataRocksPivot {\r\n    // params\r\n    @Input() toolbar: boolean;\r\n    @Input() width: string | number;\r\n    @Input() height: string | number;\r\n    @Input() report: any | string;\r\n    @Input() global: any;\r\n    @Input() customizeCell: (cell: any, data: any) => void;\r\n    // events\r\n    @Output() cellclick: EventEmitter<any> = new EventEmitter();\r\n    @Output() celldoubleclick: EventEmitter<any> = new EventEmitter();\r\n    @Output() dataerror: EventEmitter<Object> = new EventEmitter();\r\n    @Output() datafilecancelled: EventEmitter<Object> = new EventEmitter();\r\n    @Output() dataloaded: EventEmitter<Object> = new EventEmitter();\r\n    @Output() datachanged: EventEmitter<Object> = new EventEmitter();\r\n    @Output() fieldslistclose: EventEmitter<Object> = new EventEmitter();\r\n    @Output() fieldslistopen: EventEmitter<Object> = new EventEmitter();\r\n    @Output() filteropen: EventEmitter<Object> = new EventEmitter();\r\n    @Output() fullscreen: EventEmitter<Object> = new EventEmitter();\r\n    @Output() loadingdata: EventEmitter<Object> = new EventEmitter();\r\n    @Output() loadinglocalization: EventEmitter<Object> = new EventEmitter();\r\n    @Output() loadingreportfile: EventEmitter<Object> = new EventEmitter();\r\n    @Output() localizationerror: EventEmitter<Object> = new EventEmitter();\r\n    @Output() localizationloaded: EventEmitter<Object> = new EventEmitter();\r\n    @Output() openingreportfile: EventEmitter<Object> = new EventEmitter();\r\n    @Output() querycomplete: EventEmitter<Object> = new EventEmitter();\r\n    @Output() queryerror: EventEmitter<Object> = new EventEmitter();\r\n    @Output() ready: EventEmitter<any> = new EventEmitter();\r\n    @Output() reportchange: EventEmitter<Object> = new EventEmitter();\r\n    @Output() reportcomplete: EventEmitter<Object> = new EventEmitter();\r\n    @Output() reportfilecancelled: EventEmitter<Object> = new EventEmitter();\r\n    @Output() reportfileerror: EventEmitter<Object> = new EventEmitter();\r\n    @Output() reportfileloaded: EventEmitter<Object> = new EventEmitter();\r\n    @Output() runningquery: EventEmitter<Object> = new EventEmitter();\r\n    @Output() update: EventEmitter<Object> = new EventEmitter();\r\n    @Output() beforetoolbarcreated: EventEmitter<Object> = new EventEmitter();\r\n    @Output() aftergriddraw: EventEmitter<Object> = new EventEmitter();\r\n    @Output() beforegriddraw: EventEmitter<Object> = new EventEmitter();\r\n    // api\r\n    public webDataRocks: any;\r\n    // private\r\n    private root: HTMLElement;\r\n\r\n    constructor(el: ElementRef) {\r\n        this.root = <HTMLElement>el.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.webDataRocks = window[\"webdatarocks\"]({\r\n            container: this.root.getElementsByClassName(\"wbr-ng-wrapper\")[0],\r\n            width: this.width,\r\n            height: this.height,\r\n            toolbar: this.toolbar,\r\n            report: this.report,\r\n            global: this.global,\r\n            customizeCell: this.customizeCell,\r\n            cellclick: (cell: any) => this.cellclick.next(cell),\r\n            celldoubleclick: (cell: any) => this.celldoubleclick.next(cell),\r\n            dataerror: (event: Object) => this.dataerror.next(event),\r\n            datafilecancelled: (event: Object) => this.datafilecancelled.next(event),\r\n            dataloaded: (event: Object) => this.dataloaded.next(event),\r\n            datachanged: (event: Object) => this.datachanged.next(event),\r\n            fieldslistclose: (event: Object) => this.fieldslistclose.next(event),\r\n            fieldslistopen: (event: Object) => this.fieldslistopen.next(event),\r\n            filteropen: (event: Object) => this.filteropen.next(event),\r\n            fullscreen: (event: Object) => this.fullscreen.next(event),\r\n            loadingdata: (event: Object) => this.loadingdata.next(event),\r\n            loadinglocalization: (event: Object) => this.loadinglocalization.next(event),\r\n            loadingreportfile: (event: Object) => this.loadingreportfile.next(event),\r\n            localizationerror: (event: Object) => this.localizationerror.next(event),\r\n            localizationloaded: (event: Object) => this.localizationloaded.next(event),\r\n            openingreportfile: (event: Object) => this.openingreportfile.next(event),\r\n            querycomplete: (event: Object) => this.querycomplete.next(event),\r\n            queryerror: (event: Object) => this.queryerror.next(event),\r\n            ready: () => this.ready.next(this.webDataRocks),\r\n            reportchange: (event: Object) => this.reportchange.next(event),\r\n            reportcomplete: (event: Object) => this.reportcomplete.next(event),\r\n            reportfilecancelled: (event: Object) => this.reportfilecancelled.next(event),\r\n            reportfileerror: (event: Object) => this.reportfileerror.next(event),\r\n            reportfileloaded: (event: Object) => this.reportfileloaded.next(event),\r\n            runningquery: (event: Object) => this.runningquery.next(event),\r\n            update: (event: Object) => this.update.next(event),\r\n            beforetoolbarcreated: (toolbar: Object) => this.beforetoolbarcreated.next(toolbar),\r\n            aftergriddraw: (event: Object) => this.aftergriddraw.next(event),\r\n            beforegriddraw: (event: Object) => this.beforegriddraw.next(event)\r\n        });\r\n    }\r\n}"
        }
    ]
}